# ######################################################################################################################
#
# CMake script for finding libstb-dev.
#
# Input variables:
#
# * stb_ROOT_DIR (optional): When specified, header files and libraries will be searched for in
#   ${stb_ROOT_DIR}/include ${stb_ROOT_DIR}/libs respectively, and the default CMake search order will be
#   ignored. When unspecified, the default CMake search order is used. This variable can be specified either as a CMake
#   or environment variable. If both are set, preference is given to the CMake variable. Use this variable for finding
#   packages installed in a nonstandard location, or for enforcing that one of multiple package installations is picked
#   up.
#
# Cache variables (not intended to be used in CMakeLists.txt files)
#
# * stb_INCLUDE_DIR: Absolute path to package headers.
# * stb_LIBRARY: Absolute path to library.
#
# Output variables:
#
# * stb_FOUND: Boolean that indicates if the package was found
# * stb_INCLUDE_DIRS: Paths to the necessary header files
# * stb_LIBRARIES: Package libraries
#
# Example usage:
#
# find_package(stb) if(NOT stb_FOUND) # Error handling endif() ...
# include_directories(${stb_INCLUDE_DIRS} ...) ... target_link_libraries(my_target ${stb_LIBRARIES})
#
# ######################################################################################################################

# Get package location hint from environment variable (if any)
if(NOT stb_ROOT_DIR AND DEFINED ENV{stb_ROOT_DIR})
  set(stb_ROOT_DIR "$ENV{stb_ROOT_DIR}"
      CACHE PATH "stb base directory location (optional, used for nonstandard installation paths)")
endif()

# Search path for nonstandard package locations
if(stb_ROOT_DIR)
  set(stb_INCLUDE_PATH PATHS "${stb_ROOT_DIR}/include" NO_DEFAULT_PATH)
  set(stb_LIBRARY_PATH PATHS "${stb_ROOT_DIR}/lib" NO_DEFAULT_PATH)
endif()

# Find headers and libraries
find_path(stb_INCLUDE_DIR NAMES stb_image.h PATH_SUFFIXES "stb" ${stb_INCLUDE_PATH})
find_library(stb_LIBRARY NAMES stb PATH_SUFFIXES "stb" ${stb_LIBRARY_PATH})

mark_as_advanced(stb_INCLUDE_DIR stb_LIBRARY)

# Output variables generation
include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(
  stb
  DEFAULT_MSG
  stb_LIBRARY
  stb_INCLUDE_DIR)

set(stb_FOUND ${STB_FOUND}) # Enforce case-correctness: Set appropriately cased variable...
unset(STB_FOUND) # ...and unset uppercase variable generated by find_package_handle_standard_args

if(stb_FOUND)
  set(stb_INCLUDE_DIRS ${stb_INCLUDE_DIR})
  set(stb_LIBRARIES ${stb_LIBRARY})
endif()
